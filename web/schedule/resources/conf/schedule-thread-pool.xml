<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd"
       default-autowire="byName" default-lazy-init="true">

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.BillRakebackTask" id="billRakebackTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="rakebackExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="rakeback"/>
        <property name="threadNamePrefix" value="batch-rakeback-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.BillSalaryTask" id="billSalaryTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="salaryExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="salary"/>
        <property name="threadNamePrefix" value="batch-salary-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.BillDividenTask" id="billDividenTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="dividenExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="dividen"/>
        <property name="threadNamePrefix" value="batch-dividen-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.ReportGameTask" id="reportGameTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="reportGameExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="reportGame"/>
        <property name="threadNamePrefix" value="batch-reportGame-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.OnlinePayTask" id="onlinePayTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="onlinePayExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="onlinePay"/>
        <property name="threadNamePrefix" value="batch-onlinePay-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.ReportOperateTask" id="reportOperateTask" scope="prototype"/>
    <bean class="so.wwb.creditbox.schedule.service.merchant.task.RemovePlayerTask" id="removePlayerTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="reportExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="reportOperate"/>
        <property name="threadNamePrefix" value="batch-reportOperate-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.BillRetreatTask" id="billRetreatTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="retreatExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="retreat"/>
        <property name="threadNamePrefix" value="batch-retreat-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>

    <bean class="so.wwb.creditbox.schedule.service.merchant.task.ReportBusinessTask" id="reportBusinessTask" scope="prototype"/>
    <bean class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean" id="reportBusinessExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="keepAliveSeconds" value="120"/>
        <property name="queueCapacity" value="0"/>
        <property name="threadGroupName" value="reportBusiness"/>
        <property name="threadNamePrefix" value="batch-business-"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="allowCoreThreadTimeOut" value="false" />
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
        </property>
    </bean>
</beans>